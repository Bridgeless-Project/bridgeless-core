syntax = "proto3";
package core.bridge;


// this line is used by starport scaffolding # proto/tx/import
import "cosmos/msg/v1/msg.proto";
import "bridge/models/transaction.proto";
import "bridge/models/token.proto";
import "bridge/models/chain.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/hyle-team/bridgeless-core/x/bridge/types";

// Msg defines the Msg service.
service Msg {
    // this line is used by starport scaffolding # proto/tx/rpc
    rpc SubmitTransaction(MsgSubmitTransaction) returns (MsgSubmitTransactionResponse);
    rpc SetAndUpdateChain(MsgSetChain) returns (MsgSetChainResponse);
    rpc RemoveChainInfo(MsgRemoveChain) returns (MsgRemoveChainResponse);
    rpc SetAndUpdateToken(MsgSetToken) returns (MsgSetTokenResponse);
    rpc RemoveTokenInfo(MsgRemoveToken) returns (MsgRemoveTokenResponse);
    rpc RemovePairInfo(MsgRemovePair) returns (MsgRemovePairResponse);
    rpc SetPairInfo(MsgSetPair) returns (MsgSetPairResponse);
}

// this line is used by starport scaffolding # proto/tx/message
message MsgSubmitTransaction {
  option (cosmos.msg.v1.signer) = "submitter";

  string submitter = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  core.bridge.Transaction transaction = 2 [(gogoproto.nullable) = false];
}

message MsgSubmitTransactionResponse {}

message MsgSetToken {
  string creator = 1;
  Token token  = 2;
}

message MsgSetTokenResponse {}


message MsgRemoveToken {
  string creator = 1;
  uint64 token_id = 2;
}

message MsgRemoveTokenResponse {}

message MsgSetChain {
  string creator = 1;
  Chain chain  = 2;
}

message MsgSetChainResponse {}

message MsgRemoveChain {
  string creator = 1;
  string chain_id = 2;
}

message MsgRemoveChainResponse {}

message MsgRemovePair {
  string creator = 1;
  string src_chain = 2;
  string dst_chain = 3;
  string address = 4;
}

message MsgRemovePairResponse {}

message MsgSetPair {
  string creator = 1;
  TokenInfo pair = 2 [(gogoproto.nullable) = false];
}

message MsgSetPairResponse {}
