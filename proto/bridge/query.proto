syntax = "proto3";
package core.bridge;
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "bridge/params.proto";
import "bridge/models/transaction.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/hyle-team/bridgeless-core/x/bridge/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/cosmos/bridge/params";
  }

  // Transactions queries all the transactions.
  rpc Transactions(QueryTransactionsRequest) returns (QueryTransactionsResponse) {
    option (google.api.http).get = "/cosmos/bridge/transactions";
  }

  // TransactionById queries a transaction by ID.
  rpc TransactionById(QueryTransactionByIdRequest) returns (QueryTransactionByIdResponse) {
    option (google.api.http).get = "/cosmos/bridge/transactions/{id}";
  }
  // this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryTransactionByIdRequest is request type for the Query/TransactionById RPC method.
message QueryTransactionByIdRequest {
  // id defines the unique transaction identifier.
  string id = 1;
}

// QueryTransactionByIdResponse is response type for the Query/TransactionById RPC method.
message QueryTransactionByIdResponse {
  core.bridge.Transaction transaction = 1 [(gogoproto.nullable) = false];
}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryTransactionsRequest is request type for the Query/Transactions RPC method.
message QueryTransactionsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryTransactionsResponse is response type for the Query/Transactions RPC method.
message QueryTransactionsResponse {
  // Transactions is a list of transactions.
  repeated core.bridge.Transaction transactions = 1 [(gogoproto.nullable) = false];
  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
