// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: bridge/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/regen-network/cosmos-proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// this line is used by starport scaffolding # proto/tx/message
type MsgSubmitTransactions struct {
	Submitter    string        `protobuf:"bytes,1,opt,name=submitter,proto3" json:"submitter,omitempty"`
	Transactions []Transaction `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions"`
}

func (m *MsgSubmitTransactions) Reset()         { *m = MsgSubmitTransactions{} }
func (m *MsgSubmitTransactions) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitTransactions) ProtoMessage()    {}
func (*MsgSubmitTransactions) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{0}
}
func (m *MsgSubmitTransactions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitTransactions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitTransactions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitTransactions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitTransactions.Merge(m, src)
}
func (m *MsgSubmitTransactions) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitTransactions) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitTransactions.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitTransactions proto.InternalMessageInfo

func (m *MsgSubmitTransactions) GetSubmitter() string {
	if m != nil {
		return m.Submitter
	}
	return ""
}

func (m *MsgSubmitTransactions) GetTransactions() []Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type MsgRemoveTransaction struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	DepositChainId string `protobuf:"bytes,2,opt,name=deposit_chain_id,json=depositChainId,proto3" json:"deposit_chain_id,omitempty"`
	DepositTxHash  string `protobuf:"bytes,3,opt,name=deposit_tx_hash,json=depositTxHash,proto3" json:"deposit_tx_hash,omitempty"`
	DepositTxIndex uint64 `protobuf:"varint,4,opt,name=deposit_tx_index,json=depositTxIndex,proto3" json:"deposit_tx_index,omitempty"`
}

func (m *MsgRemoveTransaction) Reset()         { *m = MsgRemoveTransaction{} }
func (m *MsgRemoveTransaction) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveTransaction) ProtoMessage()    {}
func (*MsgRemoveTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{1}
}
func (m *MsgRemoveTransaction) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveTransaction.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveTransaction.Merge(m, src)
}
func (m *MsgRemoveTransaction) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveTransaction proto.InternalMessageInfo

func (m *MsgRemoveTransaction) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemoveTransaction) GetDepositChainId() string {
	if m != nil {
		return m.DepositChainId
	}
	return ""
}

func (m *MsgRemoveTransaction) GetDepositTxHash() string {
	if m != nil {
		return m.DepositTxHash
	}
	return ""
}

func (m *MsgRemoveTransaction) GetDepositTxIndex() uint64 {
	if m != nil {
		return m.DepositTxIndex
	}
	return 0
}

type MsgRemoveTransactionResponse struct {
}

func (m *MsgRemoveTransactionResponse) Reset()         { *m = MsgRemoveTransactionResponse{} }
func (m *MsgRemoveTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveTransactionResponse) ProtoMessage()    {}
func (*MsgRemoveTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{2}
}
func (m *MsgRemoveTransactionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveTransactionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveTransactionResponse.Merge(m, src)
}
func (m *MsgRemoveTransactionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveTransactionResponse proto.InternalMessageInfo

type MsgUpdateTransaction struct {
	Submitter   string      `protobuf:"bytes,1,opt,name=submitter,proto3" json:"submitter,omitempty"`
	Transaction Transaction `protobuf:"bytes,2,opt,name=transaction,proto3" json:"transaction"`
}

func (m *MsgUpdateTransaction) Reset()         { *m = MsgUpdateTransaction{} }
func (m *MsgUpdateTransaction) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTransaction) ProtoMessage()    {}
func (*MsgUpdateTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{3}
}
func (m *MsgUpdateTransaction) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTransaction.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTransaction.Merge(m, src)
}
func (m *MsgUpdateTransaction) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTransaction proto.InternalMessageInfo

func (m *MsgUpdateTransaction) GetSubmitter() string {
	if m != nil {
		return m.Submitter
	}
	return ""
}

func (m *MsgUpdateTransaction) GetTransaction() Transaction {
	if m != nil {
		return m.Transaction
	}
	return Transaction{}
}

type MsgUpdateTransactionResponse struct {
}

func (m *MsgUpdateTransactionResponse) Reset()         { *m = MsgUpdateTransactionResponse{} }
func (m *MsgUpdateTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTransactionResponse) ProtoMessage()    {}
func (*MsgUpdateTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{4}
}
func (m *MsgUpdateTransactionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTransactionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTransactionResponse.Merge(m, src)
}
func (m *MsgUpdateTransactionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTransactionResponse proto.InternalMessageInfo

type MsgSubmitTransactionsResponse struct {
}

func (m *MsgSubmitTransactionsResponse) Reset()         { *m = MsgSubmitTransactionsResponse{} }
func (m *MsgSubmitTransactionsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitTransactionsResponse) ProtoMessage()    {}
func (*MsgSubmitTransactionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{5}
}
func (m *MsgSubmitTransactionsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitTransactionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitTransactionsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitTransactionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitTransactionsResponse.Merge(m, src)
}
func (m *MsgSubmitTransactionsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitTransactionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitTransactionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitTransactionsResponse proto.InternalMessageInfo

type MsgInsertToken struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Token   Token  `protobuf:"bytes,2,opt,name=token,proto3" json:"token"`
}

func (m *MsgInsertToken) Reset()         { *m = MsgInsertToken{} }
func (m *MsgInsertToken) String() string { return proto.CompactTextString(m) }
func (*MsgInsertToken) ProtoMessage()    {}
func (*MsgInsertToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{6}
}
func (m *MsgInsertToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInsertToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInsertToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInsertToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInsertToken.Merge(m, src)
}
func (m *MsgInsertToken) XXX_Size() int {
	return m.Size()
}
func (m *MsgInsertToken) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInsertToken.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInsertToken proto.InternalMessageInfo

func (m *MsgInsertToken) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgInsertToken) GetToken() Token {
	if m != nil {
		return m.Token
	}
	return Token{}
}

type MsgInsertTokenResponse struct {
}

func (m *MsgInsertTokenResponse) Reset()         { *m = MsgInsertTokenResponse{} }
func (m *MsgInsertTokenResponse) String() string { return proto.CompactTextString(m) }
func (*MsgInsertTokenResponse) ProtoMessage()    {}
func (*MsgInsertTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{7}
}
func (m *MsgInsertTokenResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInsertTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInsertTokenResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInsertTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInsertTokenResponse.Merge(m, src)
}
func (m *MsgInsertTokenResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgInsertTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInsertTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInsertTokenResponse proto.InternalMessageInfo

type MsgUpdateToken struct {
	Creator  string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	TokenId  uint64        `protobuf:"varint,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Metadata TokenMetadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata"`
}

func (m *MsgUpdateToken) Reset()         { *m = MsgUpdateToken{} }
func (m *MsgUpdateToken) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateToken) ProtoMessage()    {}
func (*MsgUpdateToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{8}
}
func (m *MsgUpdateToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateToken.Merge(m, src)
}
func (m *MsgUpdateToken) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateToken) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateToken.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateToken proto.InternalMessageInfo

func (m *MsgUpdateToken) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateToken) GetTokenId() uint64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

func (m *MsgUpdateToken) GetMetadata() TokenMetadata {
	if m != nil {
		return m.Metadata
	}
	return TokenMetadata{}
}

type MsgUpdateTokenResponse struct {
}

func (m *MsgUpdateTokenResponse) Reset()         { *m = MsgUpdateTokenResponse{} }
func (m *MsgUpdateTokenResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTokenResponse) ProtoMessage()    {}
func (*MsgUpdateTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{9}
}
func (m *MsgUpdateTokenResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTokenResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTokenResponse.Merge(m, src)
}
func (m *MsgUpdateTokenResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTokenResponse proto.InternalMessageInfo

type MsgDeleteToken struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	TokenId uint64 `protobuf:"varint,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (m *MsgDeleteToken) Reset()         { *m = MsgDeleteToken{} }
func (m *MsgDeleteToken) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteToken) ProtoMessage()    {}
func (*MsgDeleteToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{10}
}
func (m *MsgDeleteToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteToken.Merge(m, src)
}
func (m *MsgDeleteToken) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteToken) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteToken.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteToken proto.InternalMessageInfo

func (m *MsgDeleteToken) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteToken) GetTokenId() uint64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

type MsgDeleteTokenResponse struct {
}

func (m *MsgDeleteTokenResponse) Reset()         { *m = MsgDeleteTokenResponse{} }
func (m *MsgDeleteTokenResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTokenResponse) ProtoMessage()    {}
func (*MsgDeleteTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{11}
}
func (m *MsgDeleteTokenResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTokenResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTokenResponse.Merge(m, src)
}
func (m *MsgDeleteTokenResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTokenResponse proto.InternalMessageInfo

type MsgInsertChain struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Chain   Chain  `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain"`
}

func (m *MsgInsertChain) Reset()         { *m = MsgInsertChain{} }
func (m *MsgInsertChain) String() string { return proto.CompactTextString(m) }
func (*MsgInsertChain) ProtoMessage()    {}
func (*MsgInsertChain) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{12}
}
func (m *MsgInsertChain) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInsertChain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInsertChain.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInsertChain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInsertChain.Merge(m, src)
}
func (m *MsgInsertChain) XXX_Size() int {
	return m.Size()
}
func (m *MsgInsertChain) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInsertChain.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInsertChain proto.InternalMessageInfo

func (m *MsgInsertChain) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgInsertChain) GetChain() Chain {
	if m != nil {
		return m.Chain
	}
	return Chain{}
}

type MsgInsertChainResponse struct {
}

func (m *MsgInsertChainResponse) Reset()         { *m = MsgInsertChainResponse{} }
func (m *MsgInsertChainResponse) String() string { return proto.CompactTextString(m) }
func (*MsgInsertChainResponse) ProtoMessage()    {}
func (*MsgInsertChainResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{13}
}
func (m *MsgInsertChainResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInsertChainResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInsertChainResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInsertChainResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInsertChainResponse.Merge(m, src)
}
func (m *MsgInsertChainResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgInsertChainResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInsertChainResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInsertChainResponse proto.InternalMessageInfo

type MsgDeleteChain struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ChainId string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
}

func (m *MsgDeleteChain) Reset()         { *m = MsgDeleteChain{} }
func (m *MsgDeleteChain) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteChain) ProtoMessage()    {}
func (*MsgDeleteChain) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{14}
}
func (m *MsgDeleteChain) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteChain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteChain.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteChain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteChain.Merge(m, src)
}
func (m *MsgDeleteChain) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteChain) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteChain.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteChain proto.InternalMessageInfo

func (m *MsgDeleteChain) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteChain) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

type MsgDeleteChainResponse struct {
}

func (m *MsgDeleteChainResponse) Reset()         { *m = MsgDeleteChainResponse{} }
func (m *MsgDeleteChainResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteChainResponse) ProtoMessage()    {}
func (*MsgDeleteChainResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{15}
}
func (m *MsgDeleteChainResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteChainResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteChainResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteChainResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteChainResponse.Merge(m, src)
}
func (m *MsgDeleteChainResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteChainResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteChainResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteChainResponse proto.InternalMessageInfo

type MsgAddTokenInfo struct {
	Creator string    `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Info    TokenInfo `protobuf:"bytes,3,opt,name=info,proto3" json:"info"`
}

func (m *MsgAddTokenInfo) Reset()         { *m = MsgAddTokenInfo{} }
func (m *MsgAddTokenInfo) String() string { return proto.CompactTextString(m) }
func (*MsgAddTokenInfo) ProtoMessage()    {}
func (*MsgAddTokenInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{16}
}
func (m *MsgAddTokenInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddTokenInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddTokenInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddTokenInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddTokenInfo.Merge(m, src)
}
func (m *MsgAddTokenInfo) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddTokenInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddTokenInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddTokenInfo proto.InternalMessageInfo

func (m *MsgAddTokenInfo) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddTokenInfo) GetInfo() TokenInfo {
	if m != nil {
		return m.Info
	}
	return TokenInfo{}
}

type MsgAddTokenInfoResponse struct {
}

func (m *MsgAddTokenInfoResponse) Reset()         { *m = MsgAddTokenInfoResponse{} }
func (m *MsgAddTokenInfoResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddTokenInfoResponse) ProtoMessage()    {}
func (*MsgAddTokenInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{17}
}
func (m *MsgAddTokenInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddTokenInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddTokenInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddTokenInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddTokenInfoResponse.Merge(m, src)
}
func (m *MsgAddTokenInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddTokenInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddTokenInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddTokenInfoResponse proto.InternalMessageInfo

type MsgRemoveTokenInfo struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	TokenId uint64 `protobuf:"varint,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	ChainId string `protobuf:"bytes,3,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
}

func (m *MsgRemoveTokenInfo) Reset()         { *m = MsgRemoveTokenInfo{} }
func (m *MsgRemoveTokenInfo) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveTokenInfo) ProtoMessage()    {}
func (*MsgRemoveTokenInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{18}
}
func (m *MsgRemoveTokenInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveTokenInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveTokenInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveTokenInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveTokenInfo.Merge(m, src)
}
func (m *MsgRemoveTokenInfo) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveTokenInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveTokenInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveTokenInfo proto.InternalMessageInfo

func (m *MsgRemoveTokenInfo) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemoveTokenInfo) GetTokenId() uint64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

func (m *MsgRemoveTokenInfo) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

type MsgRemoveTokenInfoResponse struct {
}

func (m *MsgRemoveTokenInfoResponse) Reset()         { *m = MsgRemoveTokenInfoResponse{} }
func (m *MsgRemoveTokenInfoResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveTokenInfoResponse) ProtoMessage()    {}
func (*MsgRemoveTokenInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{19}
}
func (m *MsgRemoveTokenInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveTokenInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveTokenInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveTokenInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveTokenInfoResponse.Merge(m, src)
}
func (m *MsgRemoveTokenInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveTokenInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveTokenInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveTokenInfoResponse proto.InternalMessageInfo

type MsgSetParties struct {
	Creator string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Parties []*Party `protobuf:"bytes,2,rep,name=parties,proto3" json:"parties,omitempty"`
}

func (m *MsgSetParties) Reset()         { *m = MsgSetParties{} }
func (m *MsgSetParties) String() string { return proto.CompactTextString(m) }
func (*MsgSetParties) ProtoMessage()    {}
func (*MsgSetParties) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{20}
}
func (m *MsgSetParties) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetParties) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetParties.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetParties) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetParties.Merge(m, src)
}
func (m *MsgSetParties) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetParties) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetParties.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetParties proto.InternalMessageInfo

func (m *MsgSetParties) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetParties) GetParties() []*Party {
	if m != nil {
		return m.Parties
	}
	return nil
}

type MsgSetPartiesResponse struct {
}

func (m *MsgSetPartiesResponse) Reset()         { *m = MsgSetPartiesResponse{} }
func (m *MsgSetPartiesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetPartiesResponse) ProtoMessage()    {}
func (*MsgSetPartiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{21}
}
func (m *MsgSetPartiesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetPartiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetPartiesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetPartiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetPartiesResponse.Merge(m, src)
}
func (m *MsgSetPartiesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetPartiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetPartiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetPartiesResponse proto.InternalMessageInfo

type MsgSetTssThreshold struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Threshold uint32 `protobuf:"varint,2,opt,name=threshold,proto3" json:"threshold,omitempty"`
}

func (m *MsgSetTssThreshold) Reset()         { *m = MsgSetTssThreshold{} }
func (m *MsgSetTssThreshold) String() string { return proto.CompactTextString(m) }
func (*MsgSetTssThreshold) ProtoMessage()    {}
func (*MsgSetTssThreshold) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{22}
}
func (m *MsgSetTssThreshold) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetTssThreshold) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetTssThreshold.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetTssThreshold) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetTssThreshold.Merge(m, src)
}
func (m *MsgSetTssThreshold) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetTssThreshold) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetTssThreshold.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetTssThreshold proto.InternalMessageInfo

func (m *MsgSetTssThreshold) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetTssThreshold) GetThreshold() uint32 {
	if m != nil {
		return m.Threshold
	}
	return 0
}

type MsgSetTssThresholdResponse struct {
}

func (m *MsgSetTssThresholdResponse) Reset()         { *m = MsgSetTssThresholdResponse{} }
func (m *MsgSetTssThresholdResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetTssThresholdResponse) ProtoMessage()    {}
func (*MsgSetTssThresholdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{23}
}
func (m *MsgSetTssThresholdResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetTssThresholdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetTssThresholdResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetTssThresholdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetTssThresholdResponse.Merge(m, src)
}
func (m *MsgSetTssThresholdResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetTssThresholdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetTssThresholdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetTssThresholdResponse proto.InternalMessageInfo

type MsgSetReferral struct {
	Creator  string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Referral Referral `protobuf:"bytes,2,opt,name=referral,proto3" json:"referral"`
}

func (m *MsgSetReferral) Reset()         { *m = MsgSetReferral{} }
func (m *MsgSetReferral) String() string { return proto.CompactTextString(m) }
func (*MsgSetReferral) ProtoMessage()    {}
func (*MsgSetReferral) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{24}
}
func (m *MsgSetReferral) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetReferral) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetReferral.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetReferral) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetReferral.Merge(m, src)
}
func (m *MsgSetReferral) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetReferral) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetReferral.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetReferral proto.InternalMessageInfo

func (m *MsgSetReferral) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetReferral) GetReferral() Referral {
	if m != nil {
		return m.Referral
	}
	return Referral{}
}

type MsgSetReferralResponse struct {
}

func (m *MsgSetReferralResponse) Reset()         { *m = MsgSetReferralResponse{} }
func (m *MsgSetReferralResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetReferralResponse) ProtoMessage()    {}
func (*MsgSetReferralResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{25}
}
func (m *MsgSetReferralResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetReferralResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetReferralResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetReferralResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetReferralResponse.Merge(m, src)
}
func (m *MsgSetReferralResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetReferralResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetReferralResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetReferralResponse proto.InternalMessageInfo

type MsgRemoveReferral struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgRemoveReferral) Reset()         { *m = MsgRemoveReferral{} }
func (m *MsgRemoveReferral) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveReferral) ProtoMessage()    {}
func (*MsgRemoveReferral) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{26}
}
func (m *MsgRemoveReferral) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveReferral) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveReferral.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveReferral) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveReferral.Merge(m, src)
}
func (m *MsgRemoveReferral) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveReferral) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveReferral.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveReferral proto.InternalMessageInfo

func (m *MsgRemoveReferral) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemoveReferral) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgRemoveReferralResponse struct {
}

func (m *MsgRemoveReferralResponse) Reset()         { *m = MsgRemoveReferralResponse{} }
func (m *MsgRemoveReferralResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveReferralResponse) ProtoMessage()    {}
func (*MsgRemoveReferralResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{27}
}
func (m *MsgRemoveReferralResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveReferralResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveReferralResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveReferralResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveReferralResponse.Merge(m, src)
}
func (m *MsgRemoveReferralResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveReferralResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveReferralResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveReferralResponse proto.InternalMessageInfo

type MsgSetReferralRewards struct {
	Creator string          `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Rewards ReferralRewards `protobuf:"bytes,4,opt,name=rewards,proto3" json:"rewards"`
}

func (m *MsgSetReferralRewards) Reset()         { *m = MsgSetReferralRewards{} }
func (m *MsgSetReferralRewards) String() string { return proto.CompactTextString(m) }
func (*MsgSetReferralRewards) ProtoMessage()    {}
func (*MsgSetReferralRewards) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{28}
}
func (m *MsgSetReferralRewards) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetReferralRewards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetReferralRewards.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetReferralRewards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetReferralRewards.Merge(m, src)
}
func (m *MsgSetReferralRewards) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetReferralRewards) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetReferralRewards.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetReferralRewards proto.InternalMessageInfo

func (m *MsgSetReferralRewards) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetReferralRewards) GetRewards() ReferralRewards {
	if m != nil {
		return m.Rewards
	}
	return ReferralRewards{}
}

type MsgSetReferralRewardsResponse struct {
}

func (m *MsgSetReferralRewardsResponse) Reset()         { *m = MsgSetReferralRewardsResponse{} }
func (m *MsgSetReferralRewardsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetReferralRewardsResponse) ProtoMessage()    {}
func (*MsgSetReferralRewardsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{29}
}
func (m *MsgSetReferralRewardsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetReferralRewardsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetReferralRewardsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetReferralRewardsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetReferralRewardsResponse.Merge(m, src)
}
func (m *MsgSetReferralRewardsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetReferralRewardsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetReferralRewardsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetReferralRewardsResponse proto.InternalMessageInfo

type MsgRemoveReferralRewards struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ReferrerId uint32 `protobuf:"varint,2,opt,name=referrer_id,json=referrerId,proto3" json:"referrer_id,omitempty"`
	TokenId    uint64 `protobuf:"varint,3,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (m *MsgRemoveReferralRewards) Reset()         { *m = MsgRemoveReferralRewards{} }
func (m *MsgRemoveReferralRewards) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveReferralRewards) ProtoMessage()    {}
func (*MsgRemoveReferralRewards) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{30}
}
func (m *MsgRemoveReferralRewards) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveReferralRewards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveReferralRewards.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveReferralRewards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveReferralRewards.Merge(m, src)
}
func (m *MsgRemoveReferralRewards) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveReferralRewards) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveReferralRewards.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveReferralRewards proto.InternalMessageInfo

func (m *MsgRemoveReferralRewards) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemoveReferralRewards) GetReferrerId() uint32 {
	if m != nil {
		return m.ReferrerId
	}
	return 0
}

func (m *MsgRemoveReferralRewards) GetTokenId() uint64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

type MsgRemoveReferralRewardsResponse struct {
}

func (m *MsgRemoveReferralRewardsResponse) Reset()         { *m = MsgRemoveReferralRewardsResponse{} }
func (m *MsgRemoveReferralRewardsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveReferralRewardsResponse) ProtoMessage()    {}
func (*MsgRemoveReferralRewardsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41dc2e30e6049cae, []int{31}
}
func (m *MsgRemoveReferralRewardsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveReferralRewardsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveReferralRewardsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveReferralRewardsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveReferralRewardsResponse.Merge(m, src)
}
func (m *MsgRemoveReferralRewardsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveReferralRewardsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveReferralRewardsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveReferralRewardsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgSubmitTransactions)(nil), "core.bridge.MsgSubmitTransactions")
	proto.RegisterType((*MsgRemoveTransaction)(nil), "core.bridge.MsgRemoveTransaction")
	proto.RegisterType((*MsgRemoveTransactionResponse)(nil), "core.bridge.MsgRemoveTransactionResponse")
	proto.RegisterType((*MsgUpdateTransaction)(nil), "core.bridge.MsgUpdateTransaction")
	proto.RegisterType((*MsgUpdateTransactionResponse)(nil), "core.bridge.MsgUpdateTransactionResponse")
	proto.RegisterType((*MsgSubmitTransactionsResponse)(nil), "core.bridge.MsgSubmitTransactionsResponse")
	proto.RegisterType((*MsgInsertToken)(nil), "core.bridge.MsgInsertToken")
	proto.RegisterType((*MsgInsertTokenResponse)(nil), "core.bridge.MsgInsertTokenResponse")
	proto.RegisterType((*MsgUpdateToken)(nil), "core.bridge.MsgUpdateToken")
	proto.RegisterType((*MsgUpdateTokenResponse)(nil), "core.bridge.MsgUpdateTokenResponse")
	proto.RegisterType((*MsgDeleteToken)(nil), "core.bridge.MsgDeleteToken")
	proto.RegisterType((*MsgDeleteTokenResponse)(nil), "core.bridge.MsgDeleteTokenResponse")
	proto.RegisterType((*MsgInsertChain)(nil), "core.bridge.MsgInsertChain")
	proto.RegisterType((*MsgInsertChainResponse)(nil), "core.bridge.MsgInsertChainResponse")
	proto.RegisterType((*MsgDeleteChain)(nil), "core.bridge.MsgDeleteChain")
	proto.RegisterType((*MsgDeleteChainResponse)(nil), "core.bridge.MsgDeleteChainResponse")
	proto.RegisterType((*MsgAddTokenInfo)(nil), "core.bridge.MsgAddTokenInfo")
	proto.RegisterType((*MsgAddTokenInfoResponse)(nil), "core.bridge.MsgAddTokenInfoResponse")
	proto.RegisterType((*MsgRemoveTokenInfo)(nil), "core.bridge.MsgRemoveTokenInfo")
	proto.RegisterType((*MsgRemoveTokenInfoResponse)(nil), "core.bridge.MsgRemoveTokenInfoResponse")
	proto.RegisterType((*MsgSetParties)(nil), "core.bridge.MsgSetParties")
	proto.RegisterType((*MsgSetPartiesResponse)(nil), "core.bridge.MsgSetPartiesResponse")
	proto.RegisterType((*MsgSetTssThreshold)(nil), "core.bridge.MsgSetTssThreshold")
	proto.RegisterType((*MsgSetTssThresholdResponse)(nil), "core.bridge.MsgSetTssThresholdResponse")
	proto.RegisterType((*MsgSetReferral)(nil), "core.bridge.MsgSetReferral")
	proto.RegisterType((*MsgSetReferralResponse)(nil), "core.bridge.MsgSetReferralResponse")
	proto.RegisterType((*MsgRemoveReferral)(nil), "core.bridge.MsgRemoveReferral")
	proto.RegisterType((*MsgRemoveReferralResponse)(nil), "core.bridge.MsgRemoveReferralResponse")
	proto.RegisterType((*MsgSetReferralRewards)(nil), "core.bridge.MsgSetReferralRewards")
	proto.RegisterType((*MsgSetReferralRewardsResponse)(nil), "core.bridge.MsgSetReferralRewardsResponse")
	proto.RegisterType((*MsgRemoveReferralRewards)(nil), "core.bridge.MsgRemoveReferralRewards")
	proto.RegisterType((*MsgRemoveReferralRewardsResponse)(nil), "core.bridge.MsgRemoveReferralRewardsResponse")
}

func init() { proto.RegisterFile("bridge/tx.proto", fileDescriptor_41dc2e30e6049cae) }

var fileDescriptor_41dc2e30e6049cae = []byte{
	// 1118 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0xcd, 0x6e, 0x23, 0x45,
	0x10, 0x8e, 0x93, 0x80, 0x93, 0xf2, 0xc6, 0x61, 0x47, 0xc9, 0x66, 0x3c, 0xf1, 0xda, 0x61, 0x80,
	0x25, 0xac, 0x88, 0x87, 0x35, 0x12, 0x48, 0x68, 0x91, 0x76, 0x0d, 0x48, 0x58, 0x5a, 0x8b, 0xd5,
	0xc4, 0x08, 0x14, 0x84, 0xac, 0xb1, 0xa7, 0x33, 0x1e, 0xb0, 0xdd, 0xd6, 0x74, 0x6f, 0x70, 0xae,
	0xf0, 0x02, 0x3c, 0x02, 0x82, 0x2b, 0x07, 0x0e, 0x3c, 0xc4, 0x1e, 0x57, 0x9c, 0x38, 0x21, 0x94,
	0x1c, 0x78, 0x0d, 0x34, 0x3d, 0xdd, 0xed, 0x9e, 0x5f, 0x47, 0x70, 0x4a, 0xdc, 0x55, 0xf5, 0x7d,
	0x5f, 0x55, 0x57, 0x57, 0xd9, 0xb0, 0x3b, 0x0c, 0x7c, 0xd7, 0x43, 0x16, 0x5d, 0xb4, 0xe6, 0x01,
	0xa6, 0x58, 0xab, 0x8c, 0x70, 0x80, 0x5a, 0xd1, 0xa9, 0x71, 0x30, 0xc2, 0x64, 0x8a, 0x89, 0x35,
	0x25, 0x9e, 0x75, 0xf1, 0x20, 0xfc, 0x13, 0x79, 0x19, 0x4d, 0x1e, 0x36, 0xc5, 0x2e, 0x9a, 0x10,
	0x8b, 0x06, 0xce, 0x8c, 0x38, 0x23, 0xea, 0xe3, 0x19, 0x77, 0xa8, 0x25, 0x1c, 0xf0, 0xb7, 0x28,
	0xc7, 0x34, 0x1a, 0x3b, 0x7e, 0x8e, 0x69, 0xee, 0x04, 0xf4, 0x92, 0x9b, 0xee, 0xc6, 0x4d, 0x01,
	0x3a, 0x47, 0x41, 0xe0, 0x4c, 0x08, 0x37, 0xef, 0x79, 0xd8, 0xc3, 0xec, 0x5f, 0x2b, 0xfc, 0x4f,
	0xe0, 0x45, 0xfa, 0x07, 0x91, 0x21, 0xfa, 0x10, 0x99, 0xcc, 0x5f, 0x4a, 0xb0, 0xdf, 0x23, 0xde,
	0xe9, 0xb3, 0xe1, 0xd4, 0xa7, 0xfd, 0xa5, 0x7e, 0xa2, 0xbd, 0x07, 0xdb, 0x84, 0x9d, 0x52, 0x14,
	0xe8, 0xa5, 0xa3, 0xd2, 0xf1, 0x76, 0x47, 0xff, 0xe3, 0xf7, 0x93, 0x3d, 0x1e, 0xfe, 0xd8, 0x75,
	0x03, 0x44, 0xc8, 0x29, 0x0d, 0xfc, 0x99, 0x67, 0x2f, 0x5d, 0xb5, 0x0e, 0xdc, 0x52, 0xea, 0x40,
	0xf4, 0xf5, 0xa3, 0x8d, 0xe3, 0x4a, 0x5b, 0x6f, 0x29, 0x05, 0x6d, 0x29, 0x44, 0x9d, 0xcd, 0xe7,
	0x7f, 0x35, 0xd7, 0xec, 0x58, 0xcc, 0x07, 0xd5, 0xef, 0xff, 0xf9, 0xed, 0xfe, 0x12, 0xd3, 0xfc,
	0xb5, 0x04, 0x7b, 0x3d, 0xe2, 0xd9, 0x68, 0x8a, 0x2f, 0x90, 0x12, 0xac, 0xe9, 0x50, 0x1e, 0x05,
	0xc8, 0xa1, 0x98, 0x4b, 0xb4, 0xc5, 0x47, 0xed, 0x18, 0x5e, 0x71, 0xd1, 0x1c, 0x13, 0x9f, 0x0e,
	0x58, 0x69, 0x07, 0xbe, 0xab, 0xaf, 0x33, 0x97, 0x2a, 0x3f, 0xff, 0x28, 0x3c, 0xee, 0xba, 0xda,
	0x3d, 0xd8, 0x15, 0x9e, 0x74, 0x31, 0x18, 0x3b, 0x64, 0xac, 0x6f, 0x30, 0xc7, 0x1d, 0x7e, 0xdc,
	0x5f, 0x7c, 0xea, 0x90, 0xb1, 0x8a, 0x48, 0x17, 0x03, 0x7f, 0xe6, 0xa2, 0x85, 0xbe, 0x79, 0x54,
	0x3a, 0xde, 0x94, 0x88, 0xfd, 0x45, 0x37, 0x3c, 0x35, 0x1b, 0x50, 0xcf, 0x52, 0x6b, 0x23, 0x32,
	0xc7, 0x33, 0x82, 0xcc, 0x9f, 0xa2, 0x74, 0x3e, 0x9f, 0xbb, 0x0e, 0x8d, 0xa5, 0xf3, 0x5f, 0x6b,
	0xfe, 0x08, 0x2a, 0x4a, 0xfd, 0x58, 0x9e, 0xab, 0x4b, 0xae, 0x86, 0xa4, 0x2a, 0x1e, 0xa5, 0x90,
	0x52, 0x28, 0x53, 0x68, 0xc2, 0xdd, 0xcc, 0xb6, 0x91, 0x0e, 0x67, 0x50, 0xed, 0x11, 0xaf, 0x3b,
	0x23, 0x28, 0xa0, 0xfd, 0xb0, 0xed, 0x0b, 0xee, 0xaa, 0x05, 0x2f, 0xb1, 0x97, 0xc1, 0x85, 0x6b,
	0x71, 0xe1, 0xa1, 0x85, 0x4b, 0x8e, 0xdc, 0x4c, 0x1d, 0xee, 0xc4, 0xb1, 0x25, 0xeb, 0x0f, 0x25,
	0x46, 0xcb, 0x75, 0xaf, 0xa0, 0xad, 0xc1, 0x16, 0xc3, 0x13, 0xad, 0xb1, 0x69, 0x97, 0xd9, 0xe7,
	0xae, 0xab, 0x3d, 0x84, 0xad, 0x29, 0xa2, 0x8e, 0xeb, 0x50, 0x87, 0x35, 0x43, 0xa5, 0x6d, 0xa4,
	0x45, 0xf5, 0xb8, 0x07, 0x17, 0x27, 0x23, 0xb8, 0x3e, 0x45, 0x84, 0xd4, 0xf7, 0x09, 0x93, 0xf7,
	0x31, 0x9a, 0xa0, 0xff, 0x23, 0x8f, 0x13, 0x28, 0x30, 0x99, 0x65, 0x67, 0x0d, 0x5e, 0x5c, 0x76,
	0xf6, 0x34, 0x32, 0xcb, 0xce, 0x82, 0x45, 0xd9, 0x99, 0x5b, 0xac, 0xec, 0xcc, 0x9c, 0x99, 0xd6,
	0x2a, 0xd6, 0x1a, 0x6c, 0x25, 0x1e, 0x64, 0x79, 0x14, 0xbd, 0xc4, 0x58, 0x5a, 0x71, 0x82, 0xaf,
	0x61, 0xb7, 0x47, 0xbc, 0xc7, 0xae, 0xcb, 0xb2, 0xed, 0xce, 0xce, 0x71, 0x01, 0xc3, 0x3b, 0xb0,
	0xe9, 0xcf, 0xce, 0x31, 0xbf, 0xb8, 0x3b, 0xe9, 0x8b, 0x0b, 0xe3, 0x79, 0x6a, 0xcc, 0xd3, 0xac,
	0xc1, 0x41, 0x02, 0x5e, 0x32, 0xbb, 0xa0, 0x2d, 0xdf, 0xf2, 0x0d, 0xc8, 0x0b, 0x9a, 0x4a, 0xcd,
	0x7c, 0x23, 0x9e, 0x79, 0x1d, 0x8c, 0x34, 0x8b, 0xd4, 0xf0, 0x05, 0xec, 0x84, 0x8f, 0x0d, 0xd1,
	0xa7, 0x4e, 0x40, 0x7d, 0x44, 0x0a, 0xe8, 0xdf, 0x86, 0xf2, 0x3c, 0x72, 0xe2, 0x83, 0x37, 0x7e,
	0xab, 0x21, 0xc0, 0xa5, 0x2d, 0x5c, 0xcc, 0x83, 0x68, 0xf8, 0x4b, 0x60, 0xc9, 0xf8, 0x84, 0x65,
	0x7d, 0x8a, 0x68, 0x9f, 0x90, 0xfe, 0x38, 0x40, 0x64, 0x8c, 0x27, 0x6e, 0x01, 0x6d, 0x1d, 0xb6,
	0xa9, 0x70, 0x63, 0x69, 0xef, 0xd8, 0xcb, 0x03, 0x9e, 0x5d, 0x02, 0x4d, 0x72, 0x8d, 0x58, 0xf3,
	0x9c, 0x22, 0x6a, 0xf3, 0x65, 0x56, 0xc0, 0xf3, 0x3e, 0x6c, 0x89, 0x95, 0xc7, 0xbb, 0x76, 0x3f,
	0x96, 0x9f, 0x80, 0x10, 0x4f, 0x52, 0x38, 0xf3, 0xd6, 0x52, 0x48, 0x24, 0xfd, 0x87, 0x70, 0x5b,
	0x96, 0xfe, 0x06, 0x0a, 0xaa, 0xb0, 0xee, 0x8b, 0x14, 0xd7, 0x7d, 0xd7, 0x3c, 0x84, 0x5a, 0x2a,
	0x5c, 0x62, 0x63, 0x51, 0xdf, 0xa5, 0xe5, 0x3b, 0x27, 0x70, 0x8b, 0x2e, 0xf0, 0x21, 0x94, 0x83,
	0xc8, 0x89, 0x2d, 0x97, 0x4a, 0xbb, 0x9e, 0x99, 0x20, 0x07, 0xe2, 0x79, 0x8a, 0x10, 0x31, 0x96,
	0x53, 0x84, 0x52, 0xd1, 0x1c, 0xf4, 0x0c, 0xb9, 0xab, 0x44, 0x35, 0xa1, 0x12, 0x55, 0x12, 0x05,
	0x03, 0x99, 0x3d, 0x88, 0xa3, 0xa8, 0xb5, 0x65, 0xd7, 0x6f, 0xc4, 0x67, 0x95, 0x09, 0x47, 0x79,
	0x8c, 0x42, 0x55, 0xfb, 0xe7, 0x0a, 0x6c, 0xf4, 0x88, 0xa7, 0xb9, 0xa0, 0x65, 0x7c, 0x13, 0x31,
	0x63, 0x15, 0xc8, 0x5c, 0x3b, 0xc6, 0xfd, 0xd5, 0x3e, 0x82, 0x4d, 0x73, 0xe0, 0x76, 0xfa, 0x9b,
	0xc4, 0xab, 0x49, 0x80, 0x94, 0x8b, 0xf1, 0xd6, 0x4a, 0x17, 0x95, 0x22, 0xbd, 0xdd, 0x53, 0x14,
	0x29, 0x97, 0x34, 0x45, 0xee, 0x06, 0xd6, 0x3e, 0x83, 0x8a, 0x3a, 0xe6, 0x0f, 0x93, 0x91, 0x8a,
	0xd1, 0x78, 0xad, 0xc0, 0xa8, 0x02, 0xaa, 0x13, 0x3c, 0x05, 0xa8, 0x18, 0xd3, 0x80, 0x19, 0x43,
	0x7b, 0xa9, 0x30, 0xda, 0x74, 0x39, 0x0a, 0x99, 0x31, 0x4f, 0x61, 0x6c, 0xb9, 0x85, 0x80, 0xea,
	0x66, 0x3f, 0xcc, 0x29, 0x56, 0x36, 0x60, 0xc6, 0x3a, 0x5e, 0xa6, 0x9c, 0x03, 0xa8, 0x18, 0xf3,
	0x52, 0x8e, 0x03, 0xda, 0x70, 0x2b, 0xb6, 0xa4, 0xea, 0xc9, 0x20, 0xd5, 0x6a, 0xbc, 0x5e, 0x64,
	0x95, 0x98, 0x5f, 0xc1, 0x6e, 0x72, 0xfd, 0x34, 0x73, 0x3a, 0x51, 0x22, 0xbf, 0xb9, 0xc2, 0x41,
	0x82, 0x3f, 0x01, 0x50, 0xf6, 0x8a, 0x91, 0x7a, 0x45, 0xd2, 0x66, 0x98, 0xf9, 0x36, 0x55, 0x6a,
	0x72, 0x67, 0x34, 0x33, 0xc2, 0x54, 0x87, 0xb4, 0xd4, 0x9c, 0x3d, 0x11, 0x5e, 0x96, 0xba, 0x24,
	0x0e, 0x33, 0xe2, 0x84, 0x31, 0x7d, 0x59, 0x19, 0x93, 0x5f, 0xfb, 0x12, 0xaa, 0x89, 0xb1, 0xdf,
	0xc8, 0x2e, 0x9b, 0x84, 0xbd, 0x57, 0x6c, 0x97, 0xc8, 0xe1, 0x1c, 0x4b, 0x0f, 0x7d, 0xb3, 0x50,
	0x14, 0xf3, 0xc9, 0x98, 0x63, 0xb9, 0xb3, 0x5c, 0x9b, 0xc2, 0x7e, 0xf6, 0x20, 0x7f, 0x63, 0x95,
	0xcc, 0x88, 0xeb, 0xe4, 0x46, 0x6e, 0x82, 0xae, 0x73, 0xf6, 0xfc, 0xaa, 0x51, 0x7a, 0x71, 0xd5,
	0x28, 0xfd, 0x7d, 0xd5, 0x28, 0xfd, 0x78, 0xdd, 0x58, 0x7b, 0x71, 0xdd, 0x58, 0xfb, 0xf3, 0xba,
	0xb1, 0x76, 0xf6, 0xc8, 0xf3, 0xe9, 0xf8, 0xd9, 0xb0, 0x35, 0xc2, 0x53, 0xab, 0xc3, 0xd0, 0x26,
	0x88, 0x90, 0x93, 0xa7, 0x01, 0xfe, 0x06, 0x8d, 0xa8, 0x35, 0x5c, 0x1e, 0x85, 0x84, 0xd6, 0xc5,
	0x83, 0xb6, 0xb5, 0xb0, 0xc4, 0x2f, 0xee, 0xcb, 0x39, 0x22, 0xc3, 0x97, 0xd9, 0xaf, 0xd1, 0x77,
	0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xf5, 0x40, 0x75, 0x5a, 0x88, 0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// this line is used by starport scaffolding # proto/tx/rpc
	SubmitTransactions(ctx context.Context, in *MsgSubmitTransactions, opts ...grpc.CallOption) (*MsgSubmitTransactionsResponse, error)
	RemoveTransaction(ctx context.Context, in *MsgRemoveTransaction, opts ...grpc.CallOption) (*MsgRemoveTransactionResponse, error)
	UpdateTransaction(ctx context.Context, in *MsgUpdateTransaction, opts ...grpc.CallOption) (*MsgUpdateTransactionResponse, error)
	InsertChain(ctx context.Context, in *MsgInsertChain, opts ...grpc.CallOption) (*MsgInsertChainResponse, error)
	DeleteChain(ctx context.Context, in *MsgDeleteChain, opts ...grpc.CallOption) (*MsgDeleteChainResponse, error)
	InsertToken(ctx context.Context, in *MsgInsertToken, opts ...grpc.CallOption) (*MsgInsertTokenResponse, error)
	UpdateToken(ctx context.Context, in *MsgUpdateToken, opts ...grpc.CallOption) (*MsgUpdateTokenResponse, error)
	DeleteToken(ctx context.Context, in *MsgDeleteToken, opts ...grpc.CallOption) (*MsgDeleteTokenResponse, error)
	AddTokenInfo(ctx context.Context, in *MsgAddTokenInfo, opts ...grpc.CallOption) (*MsgAddTokenInfoResponse, error)
	RemoveTokenInfo(ctx context.Context, in *MsgRemoveTokenInfo, opts ...grpc.CallOption) (*MsgRemoveTokenInfoResponse, error)
	SetParties(ctx context.Context, in *MsgSetParties, opts ...grpc.CallOption) (*MsgSetPartiesResponse, error)
	SetTssThreshold(ctx context.Context, in *MsgSetTssThreshold, opts ...grpc.CallOption) (*MsgSetTssThresholdResponse, error)
	SetReferral(ctx context.Context, in *MsgSetReferral, opts ...grpc.CallOption) (*MsgSetReferralResponse, error)
	RemoveReferral(ctx context.Context, in *MsgRemoveReferral, opts ...grpc.CallOption) (*MsgRemoveReferralResponse, error)
	SetReferralRewards(ctx context.Context, in *MsgSetReferralRewards, opts ...grpc.CallOption) (*MsgSetReferralRewardsResponse, error)
	RemoveReferralRewards(ctx context.Context, in *MsgRemoveReferralRewards, opts ...grpc.CallOption) (*MsgRemoveReferralRewardsResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) SubmitTransactions(ctx context.Context, in *MsgSubmitTransactions, opts ...grpc.CallOption) (*MsgSubmitTransactionsResponse, error) {
	out := new(MsgSubmitTransactionsResponse)
	err := c.cc.Invoke(ctx, "/core.bridge.Msg/SubmitTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveTransaction(ctx context.Context, in *MsgRemoveTransaction, opts ...grpc.CallOption) (*MsgRemoveTransactionResponse, error) {
	out := new(MsgRemoveTransactionResponse)
	err := c.cc.Invoke(ctx, "/core.bridge.Msg/RemoveTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateTransaction(ctx context.Context, in *MsgUpdateTransaction, opts ...grpc.CallOption) (*MsgUpdateTransactionResponse, error) {
	out := new(MsgUpdateTransactionResponse)
	err := c.cc.Invoke(ctx, "/core.bridge.Msg/UpdateTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) InsertChain(ctx context.Context, in *MsgInsertChain, opts ...grpc.CallOption) (*MsgInsertChainResponse, error) {
	out := new(MsgInsertChainResponse)
	err := c.cc.Invoke(ctx, "/core.bridge.Msg/InsertChain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteChain(ctx context.Context, in *MsgDeleteChain, opts ...grpc.CallOption) (*MsgDeleteChainResponse, error) {
	out := new(MsgDeleteChainResponse)
	err := c.cc.Invoke(ctx, "/core.bridge.Msg/DeleteChain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) InsertToken(ctx context.Context, in *MsgInsertToken, opts ...grpc.CallOption) (*MsgInsertTokenResponse, error) {
	out := new(MsgInsertTokenResponse)
	err := c.cc.Invoke(ctx, "/core.bridge.Msg/InsertToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateToken(ctx context.Context, in *MsgUpdateToken, opts ...grpc.CallOption) (*MsgUpdateTokenResponse, error) {
	out := new(MsgUpdateTokenResponse)
	err := c.cc.Invoke(ctx, "/core.bridge.Msg/UpdateToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteToken(ctx context.Context, in *MsgDeleteToken, opts ...grpc.CallOption) (*MsgDeleteTokenResponse, error) {
	out := new(MsgDeleteTokenResponse)
	err := c.cc.Invoke(ctx, "/core.bridge.Msg/DeleteToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddTokenInfo(ctx context.Context, in *MsgAddTokenInfo, opts ...grpc.CallOption) (*MsgAddTokenInfoResponse, error) {
	out := new(MsgAddTokenInfoResponse)
	err := c.cc.Invoke(ctx, "/core.bridge.Msg/AddTokenInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveTokenInfo(ctx context.Context, in *MsgRemoveTokenInfo, opts ...grpc.CallOption) (*MsgRemoveTokenInfoResponse, error) {
	out := new(MsgRemoveTokenInfoResponse)
	err := c.cc.Invoke(ctx, "/core.bridge.Msg/RemoveTokenInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetParties(ctx context.Context, in *MsgSetParties, opts ...grpc.CallOption) (*MsgSetPartiesResponse, error) {
	out := new(MsgSetPartiesResponse)
	err := c.cc.Invoke(ctx, "/core.bridge.Msg/SetParties", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetTssThreshold(ctx context.Context, in *MsgSetTssThreshold, opts ...grpc.CallOption) (*MsgSetTssThresholdResponse, error) {
	out := new(MsgSetTssThresholdResponse)
	err := c.cc.Invoke(ctx, "/core.bridge.Msg/SetTssThreshold", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetReferral(ctx context.Context, in *MsgSetReferral, opts ...grpc.CallOption) (*MsgSetReferralResponse, error) {
	out := new(MsgSetReferralResponse)
	err := c.cc.Invoke(ctx, "/core.bridge.Msg/SetReferral", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveReferral(ctx context.Context, in *MsgRemoveReferral, opts ...grpc.CallOption) (*MsgRemoveReferralResponse, error) {
	out := new(MsgRemoveReferralResponse)
	err := c.cc.Invoke(ctx, "/core.bridge.Msg/RemoveReferral", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetReferralRewards(ctx context.Context, in *MsgSetReferralRewards, opts ...grpc.CallOption) (*MsgSetReferralRewardsResponse, error) {
	out := new(MsgSetReferralRewardsResponse)
	err := c.cc.Invoke(ctx, "/core.bridge.Msg/SetReferralRewards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveReferralRewards(ctx context.Context, in *MsgRemoveReferralRewards, opts ...grpc.CallOption) (*MsgRemoveReferralRewardsResponse, error) {
	out := new(MsgRemoveReferralRewardsResponse)
	err := c.cc.Invoke(ctx, "/core.bridge.Msg/RemoveReferralRewards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// this line is used by starport scaffolding # proto/tx/rpc
	SubmitTransactions(context.Context, *MsgSubmitTransactions) (*MsgSubmitTransactionsResponse, error)
	RemoveTransaction(context.Context, *MsgRemoveTransaction) (*MsgRemoveTransactionResponse, error)
	UpdateTransaction(context.Context, *MsgUpdateTransaction) (*MsgUpdateTransactionResponse, error)
	InsertChain(context.Context, *MsgInsertChain) (*MsgInsertChainResponse, error)
	DeleteChain(context.Context, *MsgDeleteChain) (*MsgDeleteChainResponse, error)
	InsertToken(context.Context, *MsgInsertToken) (*MsgInsertTokenResponse, error)
	UpdateToken(context.Context, *MsgUpdateToken) (*MsgUpdateTokenResponse, error)
	DeleteToken(context.Context, *MsgDeleteToken) (*MsgDeleteTokenResponse, error)
	AddTokenInfo(context.Context, *MsgAddTokenInfo) (*MsgAddTokenInfoResponse, error)
	RemoveTokenInfo(context.Context, *MsgRemoveTokenInfo) (*MsgRemoveTokenInfoResponse, error)
	SetParties(context.Context, *MsgSetParties) (*MsgSetPartiesResponse, error)
	SetTssThreshold(context.Context, *MsgSetTssThreshold) (*MsgSetTssThresholdResponse, error)
	SetReferral(context.Context, *MsgSetReferral) (*MsgSetReferralResponse, error)
	RemoveReferral(context.Context, *MsgRemoveReferral) (*MsgRemoveReferralResponse, error)
	SetReferralRewards(context.Context, *MsgSetReferralRewards) (*MsgSetReferralRewardsResponse, error)
	RemoveReferralRewards(context.Context, *MsgRemoveReferralRewards) (*MsgRemoveReferralRewardsResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) SubmitTransactions(ctx context.Context, req *MsgSubmitTransactions) (*MsgSubmitTransactionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitTransactions not implemented")
}
func (*UnimplementedMsgServer) RemoveTransaction(ctx context.Context, req *MsgRemoveTransaction) (*MsgRemoveTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveTransaction not implemented")
}
func (*UnimplementedMsgServer) UpdateTransaction(ctx context.Context, req *MsgUpdateTransaction) (*MsgUpdateTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTransaction not implemented")
}
func (*UnimplementedMsgServer) InsertChain(ctx context.Context, req *MsgInsertChain) (*MsgInsertChainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertChain not implemented")
}
func (*UnimplementedMsgServer) DeleteChain(ctx context.Context, req *MsgDeleteChain) (*MsgDeleteChainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteChain not implemented")
}
func (*UnimplementedMsgServer) InsertToken(ctx context.Context, req *MsgInsertToken) (*MsgInsertTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertToken not implemented")
}
func (*UnimplementedMsgServer) UpdateToken(ctx context.Context, req *MsgUpdateToken) (*MsgUpdateTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateToken not implemented")
}
func (*UnimplementedMsgServer) DeleteToken(ctx context.Context, req *MsgDeleteToken) (*MsgDeleteTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteToken not implemented")
}
func (*UnimplementedMsgServer) AddTokenInfo(ctx context.Context, req *MsgAddTokenInfo) (*MsgAddTokenInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTokenInfo not implemented")
}
func (*UnimplementedMsgServer) RemoveTokenInfo(ctx context.Context, req *MsgRemoveTokenInfo) (*MsgRemoveTokenInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveTokenInfo not implemented")
}
func (*UnimplementedMsgServer) SetParties(ctx context.Context, req *MsgSetParties) (*MsgSetPartiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetParties not implemented")
}
func (*UnimplementedMsgServer) SetTssThreshold(ctx context.Context, req *MsgSetTssThreshold) (*MsgSetTssThresholdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTssThreshold not implemented")
}
func (*UnimplementedMsgServer) SetReferral(ctx context.Context, req *MsgSetReferral) (*MsgSetReferralResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetReferral not implemented")
}
func (*UnimplementedMsgServer) RemoveReferral(ctx context.Context, req *MsgRemoveReferral) (*MsgRemoveReferralResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveReferral not implemented")
}
func (*UnimplementedMsgServer) SetReferralRewards(ctx context.Context, req *MsgSetReferralRewards) (*MsgSetReferralRewardsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetReferralRewards not implemented")
}
func (*UnimplementedMsgServer) RemoveReferralRewards(ctx context.Context, req *MsgRemoveReferralRewards) (*MsgRemoveReferralRewardsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveReferralRewards not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_SubmitTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubmitTransactions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubmitTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.bridge.Msg/SubmitTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubmitTransactions(ctx, req.(*MsgSubmitTransactions))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveTransaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.bridge.Msg/RemoveTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveTransaction(ctx, req.(*MsgRemoveTransaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateTransaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.bridge.Msg/UpdateTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateTransaction(ctx, req.(*MsgUpdateTransaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_InsertChain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgInsertChain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).InsertChain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.bridge.Msg/InsertChain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).InsertChain(ctx, req.(*MsgInsertChain))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteChain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteChain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteChain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.bridge.Msg/DeleteChain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteChain(ctx, req.(*MsgDeleteChain))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_InsertToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgInsertToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).InsertToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.bridge.Msg/InsertToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).InsertToken(ctx, req.(*MsgInsertToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.bridge.Msg/UpdateToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateToken(ctx, req.(*MsgUpdateToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.bridge.Msg/DeleteToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteToken(ctx, req.(*MsgDeleteToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddTokenInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddTokenInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddTokenInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.bridge.Msg/AddTokenInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddTokenInfo(ctx, req.(*MsgAddTokenInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveTokenInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveTokenInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveTokenInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.bridge.Msg/RemoveTokenInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveTokenInfo(ctx, req.(*MsgRemoveTokenInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetParties_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetParties)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetParties(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.bridge.Msg/SetParties",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetParties(ctx, req.(*MsgSetParties))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetTssThreshold_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetTssThreshold)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetTssThreshold(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.bridge.Msg/SetTssThreshold",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetTssThreshold(ctx, req.(*MsgSetTssThreshold))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetReferral_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetReferral)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetReferral(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.bridge.Msg/SetReferral",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetReferral(ctx, req.(*MsgSetReferral))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveReferral_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveReferral)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveReferral(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.bridge.Msg/RemoveReferral",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveReferral(ctx, req.(*MsgRemoveReferral))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetReferralRewards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetReferralRewards)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetReferralRewards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.bridge.Msg/SetReferralRewards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetReferralRewards(ctx, req.(*MsgSetReferralRewards))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveReferralRewards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveReferralRewards)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveReferralRewards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.bridge.Msg/RemoveReferralRewards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveReferralRewards(ctx, req.(*MsgRemoveReferralRewards))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "core.bridge.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubmitTransactions",
			Handler:    _Msg_SubmitTransactions_Handler,
		},
		{
			MethodName: "RemoveTransaction",
			Handler:    _Msg_RemoveTransaction_Handler,
		},
		{
			MethodName: "UpdateTransaction",
			Handler:    _Msg_UpdateTransaction_Handler,
		},
		{
			MethodName: "InsertChain",
			Handler:    _Msg_InsertChain_Handler,
		},
		{
			MethodName: "DeleteChain",
			Handler:    _Msg_DeleteChain_Handler,
		},
		{
			MethodName: "InsertToken",
			Handler:    _Msg_InsertToken_Handler,
		},
		{
			MethodName: "UpdateToken",
			Handler:    _Msg_UpdateToken_Handler,
		},
		{
			MethodName: "DeleteToken",
			Handler:    _Msg_DeleteToken_Handler,
		},
		{
			MethodName: "AddTokenInfo",
			Handler:    _Msg_AddTokenInfo_Handler,
		},
		{
			MethodName: "RemoveTokenInfo",
			Handler:    _Msg_RemoveTokenInfo_Handler,
		},
		{
			MethodName: "SetParties",
			Handler:    _Msg_SetParties_Handler,
		},
		{
			MethodName: "SetTssThreshold",
			Handler:    _Msg_SetTssThreshold_Handler,
		},
		{
			MethodName: "SetReferral",
			Handler:    _Msg_SetReferral_Handler,
		},
		{
			MethodName: "RemoveReferral",
			Handler:    _Msg_RemoveReferral_Handler,
		},
		{
			MethodName: "SetReferralRewards",
			Handler:    _Msg_SetReferralRewards_Handler,
		},
		{
			MethodName: "RemoveReferralRewards",
			Handler:    _Msg_RemoveReferralRewards_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bridge/tx.proto",
}

func (m *MsgSubmitTransactions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitTransactions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitTransactions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Transactions) > 0 {
		for iNdEx := len(m.Transactions) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Transactions[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Submitter) > 0 {
		i -= len(m.Submitter)
		copy(dAtA[i:], m.Submitter)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Submitter)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveTransaction) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveTransaction) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveTransaction) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.DepositTxIndex != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.DepositTxIndex))
		i--
		dAtA[i] = 0x20
	}
	if len(m.DepositTxHash) > 0 {
		i -= len(m.DepositTxHash)
		copy(dAtA[i:], m.DepositTxHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DepositTxHash)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.DepositChainId) > 0 {
		i -= len(m.DepositChainId)
		copy(dAtA[i:], m.DepositChainId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DepositChainId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveTransactionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveTransactionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveTransactionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTransaction) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTransaction) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTransaction) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Transaction.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Submitter) > 0 {
		i -= len(m.Submitter)
		copy(dAtA[i:], m.Submitter)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Submitter)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTransactionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTransactionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTransactionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSubmitTransactionsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitTransactionsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitTransactionsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgInsertToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInsertToken) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInsertToken) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Token.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgInsertTokenResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInsertTokenResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInsertTokenResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateToken) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateToken) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Metadata.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if m.TokenId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.TokenId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTokenResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTokenResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTokenResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteToken) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteToken) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.TokenId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.TokenId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTokenResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTokenResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTokenResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgInsertChain) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInsertChain) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInsertChain) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Chain.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgInsertChainResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInsertChainResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInsertChainResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteChain) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteChain) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteChain) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ChainId) > 0 {
		i -= len(m.ChainId)
		copy(dAtA[i:], m.ChainId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ChainId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteChainResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteChainResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteChainResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddTokenInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddTokenInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddTokenInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddTokenInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddTokenInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddTokenInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveTokenInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveTokenInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveTokenInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ChainId) > 0 {
		i -= len(m.ChainId)
		copy(dAtA[i:], m.ChainId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ChainId)))
		i--
		dAtA[i] = 0x1a
	}
	if m.TokenId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.TokenId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveTokenInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveTokenInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveTokenInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetParties) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetParties) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetParties) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Parties) > 0 {
		for iNdEx := len(m.Parties) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Parties[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetPartiesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetPartiesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetPartiesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetTssThreshold) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetTssThreshold) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetTssThreshold) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Threshold != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Threshold))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetTssThresholdResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetTssThresholdResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetTssThresholdResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetReferral) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetReferral) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetReferral) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Referral.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetReferralResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetReferralResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetReferralResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveReferral) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveReferral) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveReferral) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveReferralResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveReferralResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveReferralResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetReferralRewards) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetReferralRewards) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetReferralRewards) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Rewards.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetReferralRewardsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetReferralRewardsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetReferralRewardsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveReferralRewards) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveReferralRewards) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveReferralRewards) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.TokenId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.TokenId))
		i--
		dAtA[i] = 0x18
	}
	if m.ReferrerId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ReferrerId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveReferralRewardsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveReferralRewardsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveReferralRewardsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgSubmitTransactions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Submitter)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Transactions) > 0 {
		for _, e := range m.Transactions {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgRemoveTransaction) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DepositChainId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DepositTxHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.DepositTxIndex != 0 {
		n += 1 + sovTx(uint64(m.DepositTxIndex))
	}
	return n
}

func (m *MsgRemoveTransactionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateTransaction) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Submitter)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Transaction.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateTransactionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSubmitTransactionsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgInsertToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Token.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgInsertTokenResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.TokenId != 0 {
		n += 1 + sovTx(uint64(m.TokenId))
	}
	l = m.Metadata.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateTokenResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.TokenId != 0 {
		n += 1 + sovTx(uint64(m.TokenId))
	}
	return n
}

func (m *MsgDeleteTokenResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgInsertChain) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Chain.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgInsertChainResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteChain) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ChainId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteChainResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddTokenInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Info.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgAddTokenInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveTokenInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.TokenId != 0 {
		n += 1 + sovTx(uint64(m.TokenId))
	}
	l = len(m.ChainId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveTokenInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetParties) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Parties) > 0 {
		for _, e := range m.Parties {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgSetPartiesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetTssThreshold) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Threshold != 0 {
		n += 1 + sovTx(uint64(m.Threshold))
	}
	return n
}

func (m *MsgSetTssThresholdResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetReferral) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Referral.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgSetReferralResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveReferral) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgRemoveReferralResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetReferralRewards) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Rewards.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgSetReferralRewardsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveReferralRewards) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ReferrerId != 0 {
		n += 1 + sovTx(uint64(m.ReferrerId))
	}
	if m.TokenId != 0 {
		n += 1 + sovTx(uint64(m.TokenId))
	}
	return n
}

func (m *MsgRemoveReferralRewardsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgSubmitTransactions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitTransactions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitTransactions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Submitter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Submitter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Transactions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Transactions = append(m.Transactions, Transaction{})
			if err := m.Transactions[len(m.Transactions)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveTransaction) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveTransaction: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveTransaction: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DepositChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositTxHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DepositTxHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositTxIndex", wireType)
			}
			m.DepositTxIndex = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DepositTxIndex |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveTransactionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveTransactionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveTransactionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTransaction) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTransaction: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTransaction: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Submitter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Submitter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Transaction", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Transaction.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTransactionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTransactionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTransactionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubmitTransactionsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitTransactionsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitTransactionsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInsertToken) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInsertToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInsertToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Token.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInsertTokenResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInsertTokenResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInsertTokenResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateToken) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenId", wireType)
			}
			m.TokenId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TokenId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Metadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTokenResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTokenResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTokenResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteToken) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenId", wireType)
			}
			m.TokenId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TokenId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTokenResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTokenResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTokenResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInsertChain) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInsertChain: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInsertChain: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chain", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Chain.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInsertChainResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInsertChainResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInsertChainResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteChain) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteChain: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteChain: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteChainResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteChainResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteChainResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddTokenInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddTokenInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddTokenInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddTokenInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddTokenInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddTokenInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveTokenInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveTokenInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveTokenInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenId", wireType)
			}
			m.TokenId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TokenId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveTokenInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveTokenInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveTokenInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetParties) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetParties: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetParties: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Parties", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Parties = append(m.Parties, &Party{})
			if err := m.Parties[len(m.Parties)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetPartiesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetPartiesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetPartiesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetTssThreshold) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetTssThreshold: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetTssThreshold: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Threshold", wireType)
			}
			m.Threshold = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Threshold |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetTssThresholdResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetTssThresholdResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetTssThresholdResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetReferral) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetReferral: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetReferral: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Referral", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Referral.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetReferralResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetReferralResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetReferralResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveReferral) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveReferral: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveReferral: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveReferralResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveReferralResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveReferralResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetReferralRewards) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetReferralRewards: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetReferralRewards: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rewards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Rewards.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetReferralRewardsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetReferralRewardsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetReferralRewardsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveReferralRewards) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveReferralRewards: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveReferralRewards: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReferrerId", wireType)
			}
			m.ReferrerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReferrerId |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenId", wireType)
			}
			m.TokenId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TokenId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveReferralRewardsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveReferralRewardsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveReferralRewardsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
